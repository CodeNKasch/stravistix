{
	"name": "stravistix",
	"version": "6.1.2",
	"description": "Wrap the needed tools required to cook the StravistiX Web Plugin",
	"scripts": {
		"build": "npm-run-all clean res-copy:* build-project:core build-project:app",
		"build:prod": "npm-run-all clean res-copy:* build-project:core@prod build-project:app@prod",
		"build-project:app": "cd ./plugin/app/ && node ./node_modules/@angular/cli/bin/ng --version && node ./node_modules/@angular/cli/bin/ng build",
		"build-project:app@prod": "npm run build-project:app -- --prod",
		"build-project:core": "npm run tsc:core",
		"build-project:core@prod": "npm run tsc:core@prod",
		"clean": "npm-run-all clean:dist clean:package clean:test-files",
		"clean:dist": "node ./node_modules/del-cli/cli.js ./dist/",
		"clean:package": "node ./node_modules/del-cli/cli.js ./package/",
		"clean:test-files": "node ./node_modules/del-cli/cli.js plugin/core/{config,modules,scripts,shared,specs}/**/*.js",
		"package": "npm-run-all clean build:prod zipRelease",
		"postinstall": "cd ./plugin/core/ && npm install && cd ../app/ && npm install",
		"res-copy:libs@core": "node ./node_modules/cpy-cli/cli.js ./core/node_modules/systemjs/dist/system.js ./core/node_modules/systemjs-plugin-css/css.js ./core/node_modules/geodesy/dms.js ./core/node_modules/geodesy/latlon-spherical.js ./core/node_modules/chart.js/dist/Chart.bundle.js ./core/node_modules/qrcode/build/qrcode.min.js ./core/node_modules/fancybox/dist/js/jquery.fancybox.pack.js ./core/node_modules/lodash/lodash.min.js ./core/node_modules/jquery/dist/jquery.js ./core/node_modules/q/q.js ./core/node_modules/d3/d3.min.js ./core/node_modules/file-saver/FileSaver.min.js ../dist/ --cwd=plugin --parents",
		"res-copy:css@core": "node ./node_modules/cpy-cli/cli.js ./core/css/core.css ./core/node_modules/fancybox/dist/css/jquery.fancybox.css ../dist/ --cwd=plugin --parents",
		"res-copy:img@core": "node ./node_modules/cpy-cli/cli.js ./core/icons/* ./core/node_modules/fancybox/dist/img/* ../dist/ --cwd=plugin --parents",
		"res-copy:manifest": "node ./node_modules/cpy-cli/cli.js ./plugin/manifest.json ./dist/",
		"res-copy:install-guide": "node ./node_modules/cpy-cli/cli.js ./plugin/INSTALL.txt ./dist/",
		"test": "npm-run-all clean test:core test:app-headless",
		"test:app": "cd ./plugin/app/ && node ./node_modules/@angular/cli/bin/ng test",
		"test:app-headless": "npm run test:app -- --browsers ChromeHeadless --watch false",
		"test:core": "npm-run-all tsc:core@test && node ./plugin/core/node_modules/karma/bin/karma start plugin/core/karma.conf.js --single-run && npm run clean:test-files",
		"tsc:core-version": "node -e \"const tsc = require('./plugin/core/node_modules/typescript'); console.log('typescript version: ' + tsc.version)\"",
		"tsc:core": "npm run tsc:core-version && node ./plugin/core/node_modules/typescript/bin/tsc -p plugin/core/tsconfig.json",
		"tsc:core@prod": "npm run tsc:core-version && node ./plugin/core/node_modules/typescript/bin/tsc -p plugin/core/tsconfig.prod.json",
		"tsc:core@test": "npm run tsc:core-version && node ./plugin/core/node_modules/typescript/bin/tsc -p plugin/core/tsconfig.test.json",
		"tsc:core@watch": "npm run tsc:core -- --watch",
		"tslint-fix:core": "node ./plugin/core/node_modules/tslint/bin/tslint -c ./tslint.json ./plugin/core/**/*.ts --fix",
		"tslint-fix:app": "cd ./plugin/app/ && node ./node_modules/@angular/cli/bin/ng lint --fix",
		"start": "npm run watch",
		"watch": "npm run clean && npm-run-all --print-label --parallel watch:*",
		"watch:app": "npm run build-project:app -- --watch",
		"watch:core": "npm-run-all res-copy:* tsc:core@watch",
		"wipe": "npm run clean && node ./node_modules/del-cli/cli.js ./node_modules/ ./plugin/core/node_modules/ ./plugin/app/node_modules/",
		"zipRelease": "node -e \"const z = require('zip-folder'), f = require('fs'), m = require('./dist/manifest.json'), t = './package', o = t + '/v' + m.version_name.split(' ').join('_').toLowerCase() + '_' + (new Date()).toJSON().slice(0, 16).replace('T', '-').replace(':', '-') + '.zip';if (!f.existsSync(t)) f.mkdirSync(t);z('./dist', o, (e) => {let code = (e) ? 1 : 0;if (!code) console.log('Generated archive ' + o);process.exit(code);});\""
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/thomaschampagne/stravistix"
	},
	"author": {
		"name": "Thomas Champagne",
		"email": "th.champagne@gmail.com",
		"web": "http://thomaschampagne.github.io"
	},
	"contributors": [
		{
			"name": "Thomas Champagne",
			"email": "th.champagne@gmail.com",
			"web": "http://thomaschampagne.github.io"
		}
	],
	"license": "MIT",
	"readme": "README.md",
	"devDependencies": {
		"bestzip": "^1.1.4",
		"cpy-cli": "^1.0.1",
		"del-cli": "^1.1.0",
		"npm-run-all": "^4.1.2",
		"run-sequence": "^1.2.2",
		"zip-folder": "^1.0.0"
	}
}
